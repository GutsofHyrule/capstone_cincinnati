{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareProgramPaths = void 0;\n\nvar syntax_1 = require(\"@glimmer/syntax\");\n\nvar constants_1 = require(\"./constants\");\n/**\n * Checks is each statement\n */\n\n\nvar isEachStatement = function (node) {\n  return node.type === 'BlockStatement' && node.path.original === 'each';\n};\n/**\n * Creates stack of namespaces\n */\n\n\nvar createNamespaceStack = function () {\n  var namespaces = [];\n  return {\n    // Getter of length\n    get length() {\n      return namespaces.length;\n    },\n\n    /** Pushes sub namespaces */\n    push: function (item) {\n      return namespaces.push({\n        node: item.node,\n        name: item.name || constants_1.DEFAULT_NAMESPACE_NAME\n      });\n    },\n\n    /** Goes to namespace up */\n    pop: function () {\n      return namespaces.pop();\n    },\n\n    /** Returns head item of the stack */\n    head: function () {\n      return namespaces[namespaces.length - 1];\n    }\n  };\n};\n/**\n * Prepares paths Glimmer AST for compatible with JS AST.\n */\n\n\nexports.prepareProgramPaths = function (program, isComponent) {\n  var namespaces = createNamespaceStack(); // Global component namespace\n\n  if (isComponent) {\n    namespaces.push({\n      node: program,\n      name: 'props'\n    });\n  }\n\n  var eachStatementEntered = false;\n  syntax_1.traverse(program, {\n    // Process block statements\n    All: {\n      enter: function (node) {\n        if (node.type === 'Program' && eachStatementEntered) {\n          namespaces.push({\n            node: node\n          });\n          eachStatementEntered = false;\n        }\n\n        if (isEachStatement(node)) {\n          eachStatementEntered = true;\n        }\n      },\n      exit: function (node) {\n        // Exit from namespace\n        if (namespaces.length > 0 && node === namespaces.head().node) {\n          namespaces.pop();\n        }\n      }\n    },\n    // Process path expressions\n    PathExpression: function (node) {\n      // Add prefixes\n      if (namespaces.length) {\n        node.parts.unshift(namespaces.head().name);\n      }\n    }\n  });\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","prepareProgramPaths","syntax_1","require","constants_1","isEachStatement","node","type","path","original","createNamespaceStack","namespaces","length","push","item","name","DEFAULT_NAMESPACE_NAME","pop","head","program","isComponent","eachStatementEntered","traverse","All","enter","exit","PathExpression","parts","unshift"],"sources":["C:/Users/KA-001/HT Coding projects/capstone_cincinnati/node_modules/handlebars-to-jsx/dist/pathsPrepare.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareProgramPaths = void 0;\nvar syntax_1 = require(\"@glimmer/syntax\");\nvar constants_1 = require(\"./constants\");\n/**\n * Checks is each statement\n */\nvar isEachStatement = function (node) {\n    return node.type === 'BlockStatement' && node.path.original === 'each';\n};\n/**\n * Creates stack of namespaces\n */\nvar createNamespaceStack = function () {\n    var namespaces = [];\n    return {\n        // Getter of length\n        get length() {\n            return namespaces.length;\n        },\n        /** Pushes sub namespaces */\n        push: function (item) {\n            return namespaces.push({\n                node: item.node,\n                name: item.name || constants_1.DEFAULT_NAMESPACE_NAME\n            });\n        },\n        /** Goes to namespace up */\n        pop: function () { return namespaces.pop(); },\n        /** Returns head item of the stack */\n        head: function () { return namespaces[namespaces.length - 1]; }\n    };\n};\n/**\n * Prepares paths Glimmer AST for compatible with JS AST.\n */\nexports.prepareProgramPaths = function (program, isComponent) {\n    var namespaces = createNamespaceStack();\n    // Global component namespace\n    if (isComponent) {\n        namespaces.push({ node: program, name: 'props' });\n    }\n    var eachStatementEntered = false;\n    syntax_1.traverse(program, {\n        // Process block statements\n        All: {\n            enter: function (node) {\n                if (node.type === 'Program' && eachStatementEntered) {\n                    namespaces.push({ node: node });\n                    eachStatementEntered = false;\n                }\n                if (isEachStatement(node)) {\n                    eachStatementEntered = true;\n                }\n            },\n            exit: function (node) {\n                // Exit from namespace\n                if (namespaces.length > 0 && node === namespaces.head().node) {\n                    namespaces.pop();\n                }\n            }\n        },\n        // Process path expressions\n        PathExpression: function (node) {\n            // Add prefixes\n            if (namespaces.length) {\n                node.parts.unshift(namespaces.head().name);\n            }\n        }\n    });\n};\n"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;EAAEC,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,mBAAR,GAA8B,KAAK,CAAnC;;AACA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAD,CAAzB;AACA;AACA;AACA;;;AACA,IAAIE,eAAe,GAAG,UAAUC,IAAV,EAAgB;EAClC,OAAOA,IAAI,CAACC,IAAL,KAAc,gBAAd,IAAkCD,IAAI,CAACE,IAAL,CAAUC,QAAV,KAAuB,MAAhE;AACH,CAFD;AAGA;AACA;AACA;;;AACA,IAAIC,oBAAoB,GAAG,YAAY;EACnC,IAAIC,UAAU,GAAG,EAAjB;EACA,OAAO;IACH;IACA,IAAIC,MAAJ,GAAa;MACT,OAAOD,UAAU,CAACC,MAAlB;IACH,CAJE;;IAKH;IACAC,IAAI,EAAE,UAAUC,IAAV,EAAgB;MAClB,OAAOH,UAAU,CAACE,IAAX,CAAgB;QACnBP,IAAI,EAAEQ,IAAI,CAACR,IADQ;QAEnBS,IAAI,EAAED,IAAI,CAACC,IAAL,IAAaX,WAAW,CAACY;MAFZ,CAAhB,CAAP;IAIH,CAXE;;IAYH;IACAC,GAAG,EAAE,YAAY;MAAE,OAAON,UAAU,CAACM,GAAX,EAAP;IAA0B,CAb1C;;IAcH;IACAC,IAAI,EAAE,YAAY;MAAE,OAAOP,UAAU,CAACA,UAAU,CAACC,MAAX,GAAoB,CAArB,CAAjB;IAA2C;EAf5D,CAAP;AAiBH,CAnBD;AAoBA;AACA;AACA;;;AACAb,OAAO,CAACE,mBAAR,GAA8B,UAAUkB,OAAV,EAAmBC,WAAnB,EAAgC;EAC1D,IAAIT,UAAU,GAAGD,oBAAoB,EAArC,CAD0D,CAE1D;;EACA,IAAIU,WAAJ,EAAiB;IACbT,UAAU,CAACE,IAAX,CAAgB;MAAEP,IAAI,EAAEa,OAAR;MAAiBJ,IAAI,EAAE;IAAvB,CAAhB;EACH;;EACD,IAAIM,oBAAoB,GAAG,KAA3B;EACAnB,QAAQ,CAACoB,QAAT,CAAkBH,OAAlB,EAA2B;IACvB;IACAI,GAAG,EAAE;MACDC,KAAK,EAAE,UAAUlB,IAAV,EAAgB;QACnB,IAAIA,IAAI,CAACC,IAAL,KAAc,SAAd,IAA2Bc,oBAA/B,EAAqD;UACjDV,UAAU,CAACE,IAAX,CAAgB;YAAEP,IAAI,EAAEA;UAAR,CAAhB;UACAe,oBAAoB,GAAG,KAAvB;QACH;;QACD,IAAIhB,eAAe,CAACC,IAAD,CAAnB,EAA2B;UACvBe,oBAAoB,GAAG,IAAvB;QACH;MACJ,CATA;MAUDI,IAAI,EAAE,UAAUnB,IAAV,EAAgB;QAClB;QACA,IAAIK,UAAU,CAACC,MAAX,GAAoB,CAApB,IAAyBN,IAAI,KAAKK,UAAU,CAACO,IAAX,GAAkBZ,IAAxD,EAA8D;UAC1DK,UAAU,CAACM,GAAX;QACH;MACJ;IAfA,CAFkB;IAmBvB;IACAS,cAAc,EAAE,UAAUpB,IAAV,EAAgB;MAC5B;MACA,IAAIK,UAAU,CAACC,MAAf,EAAuB;QACnBN,IAAI,CAACqB,KAAL,CAAWC,OAAX,CAAmBjB,UAAU,CAACO,IAAX,GAAkBH,IAArC;MACH;IACJ;EAzBsB,CAA3B;AA2BH,CAlCD"},"metadata":{},"sourceType":"script"}