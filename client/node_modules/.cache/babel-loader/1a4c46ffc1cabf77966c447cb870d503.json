{"ast":null,"code":"/**\n * Subclass of `Error` with additional information\n * about location of incorrect markup.\n */\nconst SyntaxError = function () {\n  SyntaxError.prototype = Object.create(Error.prototype);\n  SyntaxError.prototype.constructor = SyntaxError;\n\n  function SyntaxError(message, location) {\n    let error = Error.call(this, message);\n    this.message = message;\n    this.stack = error.stack;\n    this.location = location;\n  }\n\n  return SyntaxError;\n}();\n\nexport default SyntaxError;","map":{"version":3,"mappings":"AAYA;;;;AAIA,MAAMA,WAAW,GAA4B;EAChCA,YAACC,SAAD,GAAaC,MAAM,CAACC,MAAP,CAAcC,KAAK,CAACH,SAApB,CAAb;EACAD,YAACC,SAAD,CAAWI,WAAX,GAAyBL,WAAzB;;EAEX,SAASA,WAAT,CAAwCM,OAAxC,EAAyDC,QAAzD,EAAqF;IACnF,IAAIC,KAAK,GAAGJ,KAAK,CAACK,IAAN,CAAW,IAAX,EAAiBH,OAAjB,CAAZ;IAEI,KAACA,OAAD,GAAWA,OAAX;IACA,KAACI,KAAD,GAASF,KAAK,CAACE,KAAf;IACA,KAACH,QAAD,GAAYA,QAAZ;EACL;;EAED,OAAOP,WAAP;AAZ0C,CAAC,EAA7C;;AAeA,eAAeA,WAAf","names":["SyntaxError","prototype","Object","create","Error","constructor","message","location","error","call","stack"],"sourceRoot":"","sources":["../../../../../packages/@glimmer/syntax/lib/errors/syntax-error.ts"],"sourcesContent":["import * as AST from '../types/nodes';\n\nexport interface SyntaxError extends Error {\n  location: AST.SourceLocation;\n  constructor: SyntaxErrorConstructor;\n}\n\nexport interface SyntaxErrorConstructor {\n  new (message: string, location: AST.SourceLocation): SyntaxError;\n  readonly prototype: SyntaxError;\n}\n\n/**\n * Subclass of `Error` with additional information\n * about location of incorrect markup.\n */\nconst SyntaxError: SyntaxErrorConstructor = (function() {\n  SyntaxError.prototype = Object.create(Error.prototype);\n  SyntaxError.prototype.constructor = SyntaxError;\n\n  function SyntaxError(this: SyntaxError, message: string, location: AST.SourceLocation) {\n    let error = Error.call(this, message);\n\n    this.message = message;\n    this.stack = error.stack;\n    this.location = location;\n  }\n\n  return SyntaxError as any;\n})();\n\nexport default SyntaxError;\n"]},"metadata":{},"sourceType":"module"}