{"ast":null,"code":"import { ensureGuid } from './guid';\nexport function dict() {\n  return Object.create(null);\n}\nexport class DictSet {\n  constructor() {\n    this.dict = dict();\n  }\n\n  add(obj) {\n    if (typeof obj === 'string') this.dict[obj] = obj;else this.dict[ensureGuid(obj)] = obj;\n    return this;\n  }\n\n  delete(obj) {\n    if (typeof obj === 'string') delete this.dict[obj];else if (obj._guid) delete this.dict[obj._guid];\n  }\n\n}\nexport class Stack {\n  constructor() {\n    this.stack = [];\n    this.current = null;\n  }\n\n  get size() {\n    return this.stack.length;\n  }\n\n  push(item) {\n    this.current = item;\n    this.stack.push(item);\n  }\n\n  pop() {\n    let item = this.stack.pop();\n    let len = this.stack.length;\n    this.current = len === 0 ? null : this.stack[len - 1];\n    return item === undefined ? null : item;\n  }\n\n  isEmpty() {\n    return this.stack.length === 0;\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAAkBA,UAAlB,QAAoC,QAApC;AAYA,OAAM,SAAUC,IAAV,GAAc;EAClB,OAAOC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAP;AACD;AAID,OAAM,MAAOC,OAAP,CAAc;EAGlBC;IACM,KAACJ,IAAD,GAAQA,IACd,EADM;EACL;;EAEEK,IAACC,GAAD,EAAO;IACR,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,KAAKN,IAAL,CAAUM,GAAV,IAAwBA,GAAxB,CAA7B,KACK,KAAKN,IAAL,CAAUD,UAAU,CAACO,GAAD,CAApB,IAAoCA,GAApC;IACL,OAAO,IAAP;EACD;;EAEKC,OAACD,GAAD,EAAO;IACX,IAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B,OAAO,KAAKN,IAAL,CAAUM,GAAV,CAAP,CAA7B,KACK,IAAKA,GAAW,CAACE,KAAjB,EAAwB,OAAO,KAAKR,IAAL,CAAWM,GAAW,CAACE,KAAvB,CAAP;EAEhC;;AAjBmB;AAmBpB,OAAM,MAAOC,KAAP,CAAY;EAAlBL;IACU,KAAKM,KAAL,GAAa,EAAb;IACD,KAAOC,OAAP,GAAqB,IAArB;EAsBR;;EApBgB,IAAJC,IAAI;IACb,OAAO,KAAKF,KAAL,CAAWG,MAAlB;EACD;;EAEGC,KAACC,IAAD,EAAQ;IACN,KAACJ,OAAD,GAAWI,IAAX;IACA,KAACL,KAAD,CAAOI,IAAP,CAAYC,IAAZ;EACL;;EAEEC;IACD,IAAID,IAAI,GAAG,KAAKL,KAAL,CAAWM,GAAX,EAAX;IACA,IAAIC,GAAG,GAAG,KAAKP,KAAL,CAAWG,MAArB;IACI,KAACF,OAAD,GAAWM,GAAG,KAAK,CAAR,GAAY,IAAZ,GAAmB,KAAKP,KAAL,CAAWO,GAAG,GAAG,CAAjB,CAA9B;IAEJ,OAAOF,IAAI,KAAKG,SAAT,GAAqB,IAArB,GAA4BH,IAAnC;EACD;;EAEMI;IACL,OAAO,KAAKT,KAAL,CAAWG,MAAX,KAAsB,CAA7B;EAEH;;AAxBiB","names":["ensureGuid","dict","Object","create","DictSet","constructor","add","obj","delete","_guid","Stack","stack","current","size","length","push","item","pop","len","undefined","isEmpty"],"sourceRoot":"","sources":["../../../../packages/@glimmer/util/lib/collections.ts"],"sourcesContent":["import { HasGuid, ensureGuid } from './guid';\nimport { Option } from './platform-utils';\n\nexport interface Dict<T> {\n  [index: string]: T;\n}\n\nexport interface Set<T> {\n  add(value: T): Set<T>;\n  delete(value: T): void;\n}\n\nexport function dict<T>(): Dict<T> {\n  return Object.create(null);\n}\n\nexport type SetMember = HasGuid | string;\n\nexport class DictSet<T extends SetMember> implements Set<T> {\n  private dict: Dict<T>;\n\n  constructor() {\n    this.dict = dict<T>();\n  }\n\n  add(obj: T): Set<T> {\n    if (typeof obj === 'string') this.dict[obj as any] = obj;\n    else this.dict[ensureGuid(obj as any)] = obj;\n    return this;\n  }\n\n  delete(obj: T) {\n    if (typeof obj === 'string') delete this.dict[obj as any];\n    else if ((obj as any)._guid) delete this.dict[(obj as any)._guid];\n  }\n}\n\nexport class Stack<T> {\n  private stack: T[] = [];\n  public current: Option<T> = null;\n\n  public get size() {\n    return this.stack.length;\n  }\n\n  push(item: T) {\n    this.current = item;\n    this.stack.push(item);\n  }\n\n  pop(): Option<T> {\n    let item = this.stack.pop();\n    let len = this.stack.length;\n    this.current = len === 0 ? null : this.stack[len - 1];\n\n    return item === undefined ? null : item;\n  }\n\n  isEmpty(): boolean {\n    return this.stack.length === 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}