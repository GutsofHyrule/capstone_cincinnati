{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _utils = require('../utils');\n\nexports['default'] = function (instance) {\n  instance.registerDecorator('inline', function (fn, props, container, options) {\n    var ret = fn;\n\n    if (!props.partials) {\n      props.partials = {};\n\n      ret = function (context, options) {\n        // Create a new partials stack frame prior to exec.\n        var original = container.partials;\n        container.partials = _utils.extend({}, original, props.partials);\n        var ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];","map":{"version":3,"mappings":";;;;qBAAuB;;qBAER,UAASA,QAAT,EAAmB;EAChCA,QAAQ,CAACC,iBAAT,CAA2B,QAA3B,EAAqC,UAASC,EAAT,EAAaC,KAAb,EAAoBC,SAApB,EAA+BC,OAA/B,EAAwC;IAC3E,IAAIC,GAAG,GAAGJ,EAAV;;IACA,IAAI,CAACC,KAAK,CAACI,QAAX,EAAqB;MACnBJ,KAAK,CAACI,QAAN,GAAiB,EAAjB;;MACAD,GAAG,GAAG,UAASE,OAAT,EAAkBH,OAAlB,EAA2B;;QAE/B,IAAII,QAAQ,GAAGL,SAAS,CAACG,QAAzB;QACAH,SAAS,CAACG,QAAV,GAAqBG,cAAO,EAAP,EAAWD,QAAX,EAAqBN,KAAK,CAACI,QAA3B,CAArB;QACA,IAAID,GAAG,GAAGJ,EAAE,CAACM,OAAD,EAAUH,OAAV,CAAZ;QACAD,SAAS,CAACG,QAAV,GAAqBE,QAArB;QACA,OAAOH,GAAP;MACD,CAPD;IAQD;;IAEDH,KAAK,CAACI,QAAN,CAAeF,OAAO,CAACM,IAAR,CAAa,CAAb,CAAf,IAAkCN,OAAO,CAACH,EAA1C;IAEA,OAAOI,GAAP;EACD,CAjBD;AAkBD","names":["instance","registerDecorator","fn","props","container","options","ret","partials","context","original","_utils","args"],"sources":["../../../../lib/handlebars/decorators/inline.js"],"sourcesContent":["import { extend } from '../utils';\n\nexport default function(instance) {\n  instance.registerDecorator('inline', function(fn, props, container, options) {\n    let ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function(context, options) {\n        // Create a new partials stack frame prior to exec.\n        let original = container.partials;\n        container.partials = extend({}, original, props.partials);\n        let ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n}\n"]},"metadata":{},"sourceType":"script"}