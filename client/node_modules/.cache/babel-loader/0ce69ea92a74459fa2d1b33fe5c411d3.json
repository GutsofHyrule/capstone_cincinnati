{"ast":null,"code":"'use strict';\n\nexports.__esModule = true; // istanbul ignore next\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nvar _handlebarsRuntime = require('./handlebars.runtime');\n\nvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime); // Compiler imports\n\n\nvar _handlebarsCompilerAst = require('./handlebars/compiler/ast');\n\nvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\n\nvar _handlebarsCompilerBase = require('./handlebars/compiler/base');\n\nvar _handlebarsCompilerCompiler = require('./handlebars/compiler/compiler');\n\nvar _handlebarsCompilerJavascriptCompiler = require('./handlebars/compiler/javascript-compiler');\n\nvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\n\nvar _handlebarsCompilerVisitor = require('./handlebars/compiler/visitor');\n\nvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\n\nvar _handlebarsNoConflict = require('./handlebars/no-conflict');\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\nvar _create = _handlebarsRuntime2['default'].create;\n\nfunction create() {\n  var hb = _create();\n\n  hb.compile = function (input, options) {\n    return _handlebarsCompilerCompiler.compile(input, options, hb);\n  };\n\n  hb.precompile = function (input, options) {\n    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n  };\n\n  hb.AST = _handlebarsCompilerAst2['default'];\n  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n  hb.Parser = _handlebarsCompilerBase.parser;\n  hb.parse = _handlebarsCompilerBase.parse;\n  hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing;\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst.Visitor = _handlebarsCompilerVisitor2['default'];\ninst['default'] = inst;\nexports['default'] = inst;\nmodule.exports = exports['default'];","map":{"version":3,"mappings":";;;;;;;;;;iCAAoB;;;;;qCAGJ;;;;sCAKT;;0CACuC;;oDACf;;;;yCACX;;;;oCAEG;;;;AAEvB,IAAIA,OAAO,GAAGC,+BAAQC,MAAtB;;AACA,SAASA,MAAT,GAAkB;EAChB,IAAIC,EAAE,GAAGH,OAAO,EAAhB;;EAEAG,EAAE,CAACC,OAAH,GAAa,UAASC,KAAT,EAAgBC,OAAhB,EAAyB;IACpC,OAAOC,oCAAQF,KAAR,EAAeC,OAAf,EAAwBH,EAAxB,CAAP;EACD,CAFD;;EAGAA,EAAE,CAACK,UAAH,GAAgB,UAASH,KAAT,EAAgBC,OAAhB,EAAyB;IACvC,OAAOC,uCAAWF,KAAX,EAAkBC,OAAlB,EAA2BH,EAA3B,CAAP;EACD,CAFD;;EAIAA,EAAE,CAACM,GAAH,GAAMC,kCAAN;EACAP,EAAE,CAACQ,QAAH,GAAWJ,oCAAX;EACAJ,EAAE,CAACS,kBAAH,GAAqBC,iDAArB;EACAV,EAAE,CAACW,MAAH,GAASC,8BAAT;EACAZ,EAAE,CAACa,KAAH,GAAQD,6BAAR;EACAZ,EAAE,CAACc,sBAAH,GAAyBF,8CAAzB;EAEA,OAAOZ,EAAP;AACD;;AAED,IAAIe,IAAI,GAAGhB,MAAM,EAAjB;AACAgB,IAAI,CAAChB,MAAL,GAAcA,MAAd;;AAEAiB,kCAAWD,IAAX;;AAEAA,IAAI,CAACE,OAAL,GAAYC,sCAAZ;AAEAH,IAAI,CAAC,SAAD,CAAJ,GAAkBA,IAAlB;qBAEeA","names":["_create","_handlebarsRuntime2","create","hb","compile","input","options","_handlebarsCompilerCompiler","precompile","AST","_handlebarsCompilerAst2","Compiler","JavaScriptCompiler","_handlebarsCompilerJavascriptCompiler2","Parser","_handlebarsCompilerBase","parse","parseWithoutProcessing","inst","_handlebarsNoConflict2","Visitor","_handlebarsCompilerVisitor2"],"sources":["../../lib/handlebars.js"],"sourcesContent":["import runtime from './handlebars.runtime';\n\n// Compiler imports\nimport AST from './handlebars/compiler/ast';\nimport {\n  parser as Parser,\n  parse,\n  parseWithoutProcessing\n} from './handlebars/compiler/base';\nimport { Compiler, compile, precompile } from './handlebars/compiler/compiler';\nimport JavaScriptCompiler from './handlebars/compiler/javascript-compiler';\nimport Visitor from './handlebars/compiler/visitor';\n\nimport noConflict from './handlebars/no-conflict';\n\nlet _create = runtime.create;\nfunction create() {\n  let hb = _create();\n\n  hb.compile = function(input, options) {\n    return compile(input, options, hb);\n  };\n  hb.precompile = function(input, options) {\n    return precompile(input, options, hb);\n  };\n\n  hb.AST = AST;\n  hb.Compiler = Compiler;\n  hb.JavaScriptCompiler = JavaScriptCompiler;\n  hb.Parser = Parser;\n  hb.parse = parse;\n  hb.parseWithoutProcessing = parseWithoutProcessing;\n\n  return hb;\n}\n\nlet inst = create();\ninst.create = create;\n\nnoConflict(inst);\n\ninst.Visitor = Visitor;\n\ninst['default'] = inst;\n\nexport default inst;\n"]},"metadata":{},"sourceType":"script"}