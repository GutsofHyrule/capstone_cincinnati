{"ast":null,"code":"const ATTR_VALUE_REGEX_TEST = /[\\xA0\"&]/;\nconst ATTR_VALUE_REGEX_REPLACE = new RegExp(ATTR_VALUE_REGEX_TEST.source, 'g');\nconst TEXT_REGEX_TEST = /[\\xA0&<>]/;\nconst TEXT_REGEX_REPLACE = new RegExp(TEXT_REGEX_TEST.source, 'g');\n\nfunction attrValueReplacer(char) {\n  switch (char.charCodeAt(0)) {\n    case 160\n    /* NBSP */\n    :\n      return '&nbsp;';\n\n    case 34\n    /* QUOT */\n    :\n      return '&quot;';\n\n    case 38\n    /* AMP */\n    :\n      return '&amp;';\n\n    default:\n      return char;\n  }\n}\n\nfunction textReplacer(char) {\n  switch (char.charCodeAt(0)) {\n    case 160\n    /* NBSP */\n    :\n      return '&nbsp;';\n\n    case 38\n    /* AMP */\n    :\n      return '&amp;';\n\n    case 60\n    /* LT */\n    :\n      return '&lt;';\n\n    case 62\n    /* GT */\n    :\n      return '&gt;';\n\n    default:\n      return char;\n  }\n}\n\nexport function escapeAttrValue(attrValue) {\n  if (ATTR_VALUE_REGEX_TEST.test(attrValue)) {\n    return attrValue.replace(ATTR_VALUE_REGEX_REPLACE, attrValueReplacer);\n  }\n\n  return attrValue;\n}\nexport function escapeText(text) {\n  if (TEXT_REGEX_TEST.test(text)) {\n    return text.replace(TEXT_REGEX_REPLACE, textReplacer);\n  }\n\n  return text;\n}","map":{"version":3,"mappings":"AAQA,MAAMA,qBAAqB,GAAG,UAA9B;AACA,MAAMC,wBAAwB,GAAG,IAAIC,MAAJ,CAAWF,qBAAqB,CAACG,MAAjC,EAAyC,GAAzC,CAAjC;AAEA,MAAMC,eAAe,GAAG,WAAxB;AACA,MAAMC,kBAAkB,GAAG,IAAIH,MAAJ,CAAWE,eAAe,CAACD,MAA3B,EAAmC,GAAnC,CAA3B;;AAEA,SAASG,iBAAT,CAA2BC,IAA3B,EAAuC;EACrC,QAAQA,IAAI,CAACC,UAAL,CAAgB,CAAhB,CAAR;IACE;IAAA;IAAA;MACE,OAAO,QAAP;;IACF;IAAA;IAAA;MACE,OAAO,QAAP;;IACF;IAAA;IAAA;MACE,OAAO,OAAP;;IACF;MACE,OAAOD,IAAP;EARJ;AAUD;;AAED,SAASE,YAAT,CAAsBF,IAAtB,EAAkC;EAChC,QAAQA,IAAI,CAACC,UAAL,CAAgB,CAAhB,CAAR;IACE;IAAA;IAAA;MACE,OAAO,QAAP;;IACF;IAAA;IAAA;MACE,OAAO,OAAP;;IACF;IAAA;IAAA;MACE,OAAO,MAAP;;IACF;IAAA;IAAA;MACE,OAAO,MAAP;;IACF;MACE,OAAOD,IAAP;EAVJ;AAYD;;AAED,OAAM,SAAUG,eAAV,CAA0BC,SAA1B,EAA2C;EAC/C,IAAIX,qBAAqB,CAACY,IAAtB,CAA2BD,SAA3B,CAAJ,EAA2C;IACzC,OAAOA,SAAS,CAACE,OAAV,CAAkBZ,wBAAlB,EAA4CK,iBAA5C,CAAP;EACD;;EACD,OAAOK,SAAP;AACD;AAED,OAAM,SAAUG,UAAV,CAAqBC,IAArB,EAAiC;EACrC,IAAIX,eAAe,CAACQ,IAAhB,CAAqBG,IAArB,CAAJ,EAAgC;IAC9B,OAAOA,IAAI,CAACF,OAAL,CAAaR,kBAAb,EAAiCI,YAAjC,CAAP;EACD;;EACD,OAAOM,IAAP;AACD","names":["ATTR_VALUE_REGEX_TEST","ATTR_VALUE_REGEX_REPLACE","RegExp","source","TEXT_REGEX_TEST","TEXT_REGEX_REPLACE","attrValueReplacer","char","charCodeAt","textReplacer","escapeAttrValue","attrValue","test","replace","escapeText","text"],"sourceRoot":"","sources":["../../../../../packages/@glimmer/syntax/lib/generation/util.ts"],"sourcesContent":["const enum Char {\n  NBSP = 0xa0,\n  QUOT = 0x22,\n  LT = 0x3c,\n  GT = 0x3e,\n  AMP = 0x26,\n}\n\nconst ATTR_VALUE_REGEX_TEST = /[\\xA0\"&]/;\nconst ATTR_VALUE_REGEX_REPLACE = new RegExp(ATTR_VALUE_REGEX_TEST.source, 'g');\n\nconst TEXT_REGEX_TEST = /[\\xA0&<>]/;\nconst TEXT_REGEX_REPLACE = new RegExp(TEXT_REGEX_TEST.source, 'g');\n\nfunction attrValueReplacer(char: string) {\n  switch (char.charCodeAt(0)) {\n    case Char.NBSP:\n      return '&nbsp;';\n    case Char.QUOT:\n      return '&quot;';\n    case Char.AMP:\n      return '&amp;';\n    default:\n      return char;\n  }\n}\n\nfunction textReplacer(char: string) {\n  switch (char.charCodeAt(0)) {\n    case Char.NBSP:\n      return '&nbsp;';\n    case Char.AMP:\n      return '&amp;';\n    case Char.LT:\n      return '&lt;';\n    case Char.GT:\n      return '&gt;';\n    default:\n      return char;\n  }\n}\n\nexport function escapeAttrValue(attrValue: string) {\n  if (ATTR_VALUE_REGEX_TEST.test(attrValue)) {\n    return attrValue.replace(ATTR_VALUE_REGEX_REPLACE, attrValueReplacer);\n  }\n  return attrValue;\n}\n\nexport function escapeText(text: string) {\n  if (TEXT_REGEX_TEST.test(text)) {\n    return text.replace(TEXT_REGEX_REPLACE, textReplacer);\n  }\n  return text;\n}\n"]},"metadata":{},"sourceType":"module"}